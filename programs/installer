if not http then
    print("Sorry, I need access to the internet to download stuff.")
    return
end

local branch = "main"

-- The list of files we can fetch.
local files = {
    {
        folder = "apis",
        name = "toyota",
        url = "https://github.com/coleharding3/toyota/raw/"..branch.."/apis/toyota",
        minify = true
    },
    {
        folder = "apis",
        name = "toyota-src",
        info = "This is the full, non-minified version of the API. You only need this if you're interested in the implementation details.",
        url = "https://github.com/coleharding3/toyota/raw/"..branch.."/apis/toyota",
        ask = true,
        default = false
    },
	{
        folder = "programs",
        name = "toyota-test",
        info = "Simple test to move forward 1 block",
        url = "https://github.com/coleharding3/toyota/raw/"..branch.."/programs/toyota-test",
        ask = true,
        default = false
    }
}

-- Utility function to grab user input.
local function prompt(default)
    if default then
        print("> [Y/n]")
    else
        print("> [y/N]")
    end
    while true do
        local event, code = os.pullEvent("key")
        if code == keys.enter then
            return default
        elseif code == keys.y then
            return true
        elseif code == keys.n then
            return false
        end
    end
end

-- Utility function for shrinking the code.
function minify(code)
    local lines = {}
    local inMultilineComment = false
    for line in string.gmatch(code, "[^\n]+") do
        line = line
        :gsub("^%s*(.-)%s*$", "%1")
        :gsub("^%-%-[^%[]*$", "")
        local keep = not inMultilineComment
        if inMultilineComment then
            if line == "]]" then
                inMultilineComment = false
            end
        elseif line:match("^%-%-%[%[") then
            inMultilineComment = true
            keep = false
        end
        if keep and line ~= "" then
            table.insert(lines, line)
        end
    end
    return table.concat(lines, "\n")
end

-- Interactively download all files.
for _, file in ipairs(files) do
    (function()
        if file.ask then
            print("Do you wish to install '" .. file.name .. "'?")
            if file.info then
                print("  " .. file.info)
            end
            if not prompt(file.default) then
                print("Skipping.")
                return
            end
        end
        fs.makeDir(file.folder)
        local path = fs.combine(file.folder, file.name)
        if fs.exists(path) then
            print("Warning: file '" .. path .. "' already exists. Overwrite?")
            if not prompt(true) then
                print("Skipping.")
                return
            end
        end
        print("Fetching '" .. file.name .. "'...")
        local request = http.get(file.url)
        if request then
            local response = request.getResponseCode()
            if response == 200 then
                local script = request.readAll()
                if file.minify then
                    script = minify(script)
                end
                local f = fs.open(path, "w")
                f.write(script)
                f.close()
                print("Done.")
            else
                print("Oh dear, something went wrong (bad HTTP response code " .. response .. ").")
                print("Please try again later; sorry for the inconvenience!")
                os.sleep(0.1)
            end
        else
            print("Oh dear, something went wrong (did not get a request handle).")
            print("Please try again later; sorry for the inconvenience!")
            os.sleep(0.1)
        end
    end)()
    print()
end

-- Prevent last key entry to be entered in the shell.
os.sleep(0.1)
