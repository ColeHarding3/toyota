--[[ 
    TOYOTA - Tracked Operations Yielding Optimized Turtle Automation - 2025 Cole

    This program is licensed under the MIT license.
    http://opensource.org/licenses/mit-license.php
]] 

-------------------------------------------------------------------------------
-- Config                                                                    --
-------------------------------------------------------------------------------

local apiPath = "apis/lama"
local file_fuel = "toyota-memory/fuel"

function supertest()
    print("super test worked from TOYOTA")
end

function readFuelState()
    if not fs.exists(file_fuel) then
        return nil
    end

    local file = fs.open(file_fuel, "r")
    assert(file, "Error: Failed to open fuel state file for reading.")

    local fuel = file.readLine()
    file.close()
    
    return tonumber(fuel)
end

function writeFuelState(fuel)
    assert(type(fuel) == "number", "Error: Fuel value must be a number.")

    local file = fs.open(file_fuel, "w")
    assert(file, "Error: Failed to open fuel state file for writing.")

    file.writeLine(tostring(fuel))
    file.close()
end

function toyotaforward()
    print("---toyota forward start---")

    local initialFuel = turtle.getFuelLevel()
    assert(initialFuel, "Error: Failed to retrieve initial fuel level.")

    writeFuelState(initialFuel)

    local success = turtle.forward()
    assert(success, "Error: Turtle failed to move forward.")

    local currentFuel = turtle.getFuelLevel()
    local previousFuel = readFuelState()

    assert(currentFuel ~= nil and previousFuel ~= nil, "Error: Failed to retrieve fuel levels for verification.")

    print("Fuel after move: " .. tostring(currentFuel))
    print("Fuel before move: " .. tostring(previousFuel))

    if currentFuel < previousFuel then
        print("Movement confirmed.")
    else
        print("Warning: Movement anomaly detected.")
    end

    print("---toyota forward end---")
end
